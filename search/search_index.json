{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Infrastructure as Code (IaC) monorepo","text":"<p>This monorepo is designed for technical professionals managing Infrastructure as Code (IaC), Ansible configurations, and Kubernetes manifest files. It provides a centralized solution for multi-cloud environments, supporting GitHub, Azure, GCP, AWS, Snowflake, and Prefect.</p>"},{"location":"#features","title":"Features","text":""},{"location":"#multi-cloud-infrastructure-as-code-iac","title":"Multi-Cloud Infrastructure as Code (IaC)","text":""},{"location":"#terraform-configurations-for-provisioning-resources-across","title":"Terraform configurations for provisioning resources across:","text":"<ul> <li>AWS</li> <li>Azure</li> <li>GCP</li> <li>Prefect</li> <li>Snowflake</li> <li>Ansible playbooks for server configurations and software provisioning.</li> <li>Unified and scalable IaC to simplify multi-cloud management.</li> </ul>"},{"location":"#kubernetes-manifests-for-prefect","title":"Kubernetes Manifests for Prefect","text":"<ul> <li>YAML files for deploying and managing Prefect flows in Kubernetes clusters.</li> <li>Pre-configured manifests ensure scalability and reliability for orchestrating workflows.</li> </ul>"},{"location":"#helm-charts","title":"Helm Charts","text":"<ul> <li>Links to Helm charts for deploying Kubernetes applications.</li> <li>Provides reusable, versioned configurations for seamless Kubernetes deployments.</li> </ul>"},{"location":"#eks-cloudformation-with-eksctl","title":"EKS CloudFormation with eksctl","text":"<ul> <li>YAML templates for creating and managing Amazon EKS clusters.</li> <li>Fully integrated with eksctl for simplified EKS cluster lifecycle management.</li> </ul> <p>This monorepo is a powerful resource for deploying scalable, cloud-agnostic infrastructure while adhering to industry best practices for IaC and Kubernetes ecosystems.</p> <p></p>"},{"location":"ansibleDirectoryStructure/","title":"Ansible Playbooks Directory Structure","text":"<p>The <code>ansible</code> directory in this monorepo is organized to accommodate playbooks for various operating systems. This structure ensures that each operating system has tailored installation steps while maintaining clarity and consistency.</p>"},{"location":"ansibleDirectoryStructure/#directory-structure","title":"Directory Structure","text":""},{"location":"ansibleDirectoryStructure/#ansible","title":"<code>ansible/</code>","text":"<ul> <li>Main directory containing subdirectories for each supported operating system.</li> <li>Each subdirectory contains:</li> <li>An <code>inventory.yaml</code> file for defining the inventory specific to that operating system.</li> <li>Playbooks for performing specific tasks, such as installing software or configuring services.</li> </ul>"},{"location":"ansibleDirectoryStructure/#subdirectory-organization","title":"Subdirectory Organization","text":""},{"location":"ansibleDirectoryStructure/#operating_system","title":"<code>&lt;operating_system&gt;/</code>","text":"<ul> <li>Represents a specific operating system (e.g., <code>amazonLinux2/</code>, <code>centos/</code>, <code>windows/</code>, etc.).</li> <li>Contents:</li> <li><code>inventory.yaml</code>: Defines the hosts and groups for deploying playbooks to this operating system.</li> <li>Playbooks:<ul> <li>Tasks are modularized into individual playbooks for specific purposes.</li> <li>Examples:</li> <li><code>installDocker.yaml</code>: Installs Docker.</li> <li><code>installJenkins.yaml</code>: Installs Jenkins and configures it to a working condition.</li> <li><code>configureWebServer.yaml</code>: Sets up and configures a web server.</li> <li><code>deployCombinedTasks.yaml</code>: Combines multiple playbooks for a comprehensive deployment.</li> </ul> </li> </ul>"},{"location":"ansibleDirectoryStructure/#example-directory-layout","title":"Example Directory Layout","text":"<pre><code>ansible/\n\u251c\u2500\u2500 amazonLinux2/\n\u2502   \u251c\u2500\u2500 inventory.yaml\n\u2502   \u251c\u2500\u2500 installDocker.yaml\n\u2502   \u251c\u2500\u2500 installJenkins.yaml\n\u2502   \u251c\u2500\u2500 configureWebServer.yaml\n\u2502   \u2514\u2500\u2500 deployCombinedTasks.yaml\n\u251c\u2500\u2500 centos/\n\u2502   \u251c\u2500\u2500 inventory.yaml\n\u2502   \u251c\u2500\u2500 installDocker.yaml\n\u2502   \u251c\u2500\u2500 installJenkins.yaml\n\u2502   \u251c\u2500\u2500 configureWebServer.yaml\n\u2502   \u2514\u2500\u2500 deployCombinedTasks.yaml\n\u251c\u2500\u2500 windows/\n\u2502   \u251c\u2500\u2500 inventory.yaml\n\u2502   \u251c\u2500\u2500 installDocker.yaml\n\u2502   \u251c\u2500\u2500 installJenkins.yaml\n\u2502   \u251c\u2500\u2500 configureWebServer.yaml\n\u2502   \u2514\u2500\u2500 deployCombinedTasks.yaml\n</code></pre> <pre><code>                                                     ___\n                                             ___..--'  .`.\n                                    ___...--'     -  .` `.`.\n                           ___...--' _      -  _   .` -   `.`.\n                  ___...--'  -       _   -       .`  `. - _ `.`.\n           __..--'_______________ -         _  .`  _   `.   - `.`.\n        .`    _ /\\    -        .`      _     .`__________`. _  -`.`.\n      .` -   _ /  \\_     -   .`  _         .` |   Infra   |`.   - `.`.\n    .`-    _  /   /\\   -   .`        _   .`   |___________|  `. _   `.`.\n  .`________ /__ /_ \\____.`____________.`     ___       ___  - `._____`|\n    |   -  __  -|    | - |  ____  |   | | _  |   |  _  |   |  _ |\n    | _   |  |  | -  |   | |.--.| |___| |    |___|     |___|    |\n    |     |--|  |    | _ | |'--'| |---| |   _|---|     |---|_   |\n    |   - |__| _|  - |   | |.--.| |   | |    |   |_  _ |   |    |\n ---``--._      |    |   |=|'--'|=|___|=|====|___|=====|___|====|\n -- . ''  ``--._| _  |  -|_|.--.|_______|_______________________|\n`--._           '--- |_  |:|'--'|:::::::|:::::::::::::::::::::::|\n_____`--._ ''      . '---'``--._|:::::::|:::::::::::::::::::::::|\n----------`--._          ''      ``--.._|:::::::::::::::::::::::|\n`--._ _________`--._'        --     .   ''-----..............LGB'\n     `--._----------`--._.  _           -- . :''           -    ''\n          `--._ _________`--._ :'              -- . :''      -- . ''\n -- . ''       `--._ ---------`--._   -- . :''\n          :'        `--._ _________`--._:'  -- . ''      -- . ''\n  -- . ''     -- . ''    `--._----------`--._      -- . ''     -- . ''\n                              `--._ _________`--._\n -- . ''           :'              `--._ ---------`--._-- . ''    -- . ''\n          -- . ''       -- . ''         `--._ _________`--._   -- . ''\n:'                 -- . ''          -- . ''  `--._----------`--._\n</code></pre>"},{"location":"ansibleIntegration/","title":"Ansible Playbooks Integration","text":"<p>This guide explains how to deploy Ansible playbooks to a remote server, step by step, and highlights the benefits of using Ansible's declarative approach compared to imperative integration.</p>"},{"location":"ansibleIntegration/#deploying-ansible-playbooks","title":"Deploying Ansible Playbooks","text":""},{"location":"ansibleIntegration/#step-1-set-up-your-ansible-environment","title":"Step 1: Set Up Your Ansible Environment","text":"<ul> <li>Install Ansible on your local machine. For most systems, you can use:   <pre><code>sudo apt update &amp;&amp; sudo apt install ansible -y   # Ubuntu/Debian\nsudo yum install ansible                        # CentOS/RHEL\n</code></pre></li> <li>Verify the installation:</li> </ul> <pre><code>ansible --version\n</code></pre> <ul> <li>Ensure your <code>ansible</code> directory is organized with subdirectories for each operating system and that playbooks are correctly configured.</li> </ul>"},{"location":"ansibleIntegration/#step-2-prepare-the-remote-server","title":"Step 2: Prepare the Remote Server","text":"<ul> <li>Confirm the remote server has SSH access enabled.</li> <li>Ensure the required user account has the necessary permissions for deployment.</li> <li>Verify that Python is installed on the remote server (required for Ansible):   <pre><code>python3 --version\n</code></pre></li> </ul>"},{"location":"ansibleIntegration/#step-3-configure-the-inventory","title":"Step 3: Configure the Inventory","text":"<ul> <li>Navigate to the appropriate operating system\u2019s directory (e.g., <code>ansible/ubuntu/</code>).</li> <li>Update the <code>inventory.yaml</code> file with the remote server\u2019s details.</li> </ul> <p>Example <code>inventory.yaml</code>:</p> <pre><code>all:\n  hosts:\n    my_remote_server:\n      ansible_host: 192.168.1.100\n      ansible_user: ubuntu\n      ansible_ssh_private_key_file: /path/to/private/key.pem\n</code></pre>"},{"location":"ansibleIntegration/#step-4-test-connectivity","title":"Step 4: Test Connectivity","text":"<ul> <li>Test the connection to the remote server using Ansible's <code>ping</code> module:   <pre><code>ansible -i inventory.yaml all -m ping\n</code></pre></li> <li>A successful test will return:   <pre><code>my_remote_server | SUCCESS =&gt; {\n    \"changed\": false,\n    \"ping\": \"pong\"\n}\n</code></pre></li> </ul>"},{"location":"ansibleIntegration/#step-5-run-the-playbook","title":"Step 5: Run the Playbook","text":"<ul> <li>Run the desired playbook with the following command:   <pre><code>ansible-playbook -i inventory.yaml playbook_name.yaml\n</code></pre></li> <li>Replace <code>playbook_name.yaml</code> with the name of the playbook you wish to execute (e.g., <code>installDocker.yaml</code>).</li> </ul>"},{"location":"ansibleIntegration/#step-6-monitor-the-output","title":"Step 6: Monitor the Output","text":"<ul> <li>Ansible will log the progress of each task in real time.</li> <li>Ensure that all tasks complete successfully. If any tasks fail, review the error message and make the necessary adjustments.</li> </ul>"},{"location":"ansibleIntegration/#benefits-of-using-ansible-vs-imperative-integration","title":"Benefits of Using Ansible vs. Imperative Integration","text":""},{"location":"ansibleIntegration/#1-declarative-approach","title":"1. Declarative Approach","text":"<ul> <li> <p>Ansible: Describes the desired state of the system (e.g., \"ensure Docker is installed and running\").</p> </li> <li> <p>The system\u2019s current state is evaluated, and only necessary changes are applied.</p> </li> <li> <p>Ensures idempotency, meaning repeated runs won\u2019t cause unintended changes.</p> </li> <li> <p>Imperative Integration: Requires specifying each step in detail.</p> </li> <li>Re-running scripts can lead to errors or duplicates.</li> </ul>"},{"location":"ansibleIntegration/#2-simplicity-and-readability","title":"2. Simplicity and Readability","text":"<ul> <li>Ansible uses human-readable YAML syntax, making it easy to understand and maintain.</li> <li>Imperative scripts often involve complex logic, which can be harder to debug.</li> </ul>"},{"location":"ansibleIntegration/#3-modular-and-reusable","title":"3. Modular and Reusable","text":"<ul> <li>Ansible allows modular playbooks and reusable roles for different environments.</li> <li>Imperative scripts need significant effort to adapt for new scenarios.</li> </ul>"},{"location":"ansibleIntegration/#4-agentless-architecture","title":"4. Agentless Architecture","text":"<ul> <li>Ansible is agentless, requiring no additional software on remote servers.</li> <li>Imperative tools may rely on agents, increasing maintenance.</li> </ul>"},{"location":"ansibleIntegration/#5-automation-at-scale","title":"5. Automation at Scale","text":"<ul> <li>Ansible supports managing multiple servers simultaneously.</li> <li>Imperative methods scale poorly due to their linear approach.</li> </ul>"},{"location":"ansibleIntegration/#6-built-in-error-handling","title":"6. Built-In Error Handling","text":"<ul> <li>Ansible includes built-in error handling and rollback mechanisms.</li> <li>Imperative scripts require custom error handling, adding complexity.</li> </ul> <p>By following these steps and leveraging Ansible's capabilities, you can streamline infrastructure management, automate deployments, and maintain consistent configurations across your environments.</p> <pre><code> I s o m e t r i c   C i t i e s  -  M e t r o p o l i a\n          -------------------------------------------------------\n\n                  ________            _______\n         /\\ \\ \\ \\/_______/     ______/\\      \\  /\\ \\/ /\\ \\/ /\\  \\_____________\n        /\\ \\ \\ \\/______ /     /\\    /:\\\\      \\ ::\\  /::\\  /::\\ /____  ____ __\n       /\\ \\ \\ \\/_______/     /:\\\\  /:\\:\\\\______\\::/  \\::/  \\::///   / /   //\n      /\\ \\ \\ \\/_______/    _/____\\/:\\:\\:/_____ / / /\\ \\/ /\\ \\///___/ /___//___\n_____/___ \\ \\/_______/    /\\::::::\\\\:\\:/_____ / \\ /::\\  /::\\ /____  ____  ____\n         \\ \\/_______/    /:\\\\::::::\\\\:/_____ /   \\\\::/  \\::///   / /   / /   /\n          \\/_______/    /:\\:\\\\______\\/______/_____\\\\/ /\\ \\///___/ /___/ /_____\n\\          \\______/    /:\\:\\:/_____:/\\      \\ ___ /  /::\\ /____  ____  _/\\::::\n\\\\__________\\____/    /:\\:\\:/_____:/:\\\\      \\__ /_______/____/_/___/_ /  \\:::\n//__________/___/   _/____:/_____:/:\\:\\\\______\\ /                     /\\  /\\::\n///\\          \\/   /\\ .----.\\___:/:\\:\\:/_____ // \\                   /  \\/  \\:\n///\\\\          \\  /::\\\\ \\_\\ \\\\_:/:\\:\\:/_____ //:\\ \\                 /\\  /\\  /\\\n//:/\\\\          \\//\\::\\\\ \\ \\ \\\\/:\\:\\:/_____ //:::\\ \\               /  \\/  \\/+/\n/:/:/\\\\_________/:\\/:::\\`----' \\\\:\\:/_____ //o:/\\:\\ \\_____________/\\  /\\  / /\n:/:/://________//\\::/\\::\\_______\\\\:/_____ ///\\_\\ \\:\\/____________/  \\/  \\/+/\\\n/:/:///_/_/_/_/:\\/::\\ \\:/__  __ /:/_____ ///\\//\\\\/:/ _____  ____/\\  /\\  / /  \\\n:/:///_/_/_/_//\\::/\\:\\///_/ /_//:/______/_/ :~\\/::/ /____/ /___/  \\/  \\/+/\\  /\n/:///_/_/_/_/:\\/::\\ \\:/__  __ /:/____/\\  / \\\\:\\/:/ _____  ____/\\  /\\  / /  \\/\n:///_/_/_/_//\\::/\\:\\///_/ /_//:/____/\\:\\____\\\\::/ /____/ /___/  \\/  \\/+/\\  /\\\n///_/_/_/_/:\\/::\\ \\:/__  __ /:/____/\\:\\/____/\\\\/____________/\\  /\\  / /  \\/  \\\n//_/_/_/_//\\::/\\:\\///_/ /_//::::::/\\:\\/____/  /----/----/--/  \\/  \\/+/\\  /\\  /\n/_/_/_/_/:\\/::\\ \\:/__  __ /\\:::::/\\:\\/____/ \\/____/____/__/\\  /\\  / /  \\/  \\/_\n_/_/_/_//\\::/\\:\\///_/ /_//\\:\\::::\\:\\/____/ \\_____________/  \\/  \\/+/\\  /\\  /\n/_/_/_/:\\/::\\ \\:/__  __ /\\:\\:\\::::\\/____/   \\ _ _ _ _ _ /\\  /\\  / /  \\/  \\/___\n_/_/_//\\::/\\:\\///_/ /_//\\:\\:\\:\\              \\_________/  \\/  \\/+/\\  /\\  /   /\n/_/_/:\\/::\\ \\:/__  __ /\\:\\:\\:\\:\\______________\\       /\\  /\\  / /  \\/  \\/___/_\n_/_//\\::/\\:\\///_/ /_//::\\:\\:\\:\\/______________/      /  \\/  \\/+/\\  /\\  /   /\n/_/:\\/::\\ \\:/__  __ /::::\\:\\:\\/______________/\\     /\\  /\\  / /  \\/  \\/___/___\n_//\\::/\\:\\///_/ /_//:\\::::\\:\\/______________/  \\   /  \\/  \\/+/\\  /\\  /   /   /\n/:\\/::\\ \\:/__  __ /:\\:\\::::\\/______________/    \\ /\\  /\\  / /  \\/  \\/___/___/\n/\\::/\\:\\///_/ /_//:\\:\\:\\                         \\  \\/\\\\\\/+/\\  /\\  /   /   /+/\n\\/::\\ \\:/__  __ /:\\:\\:\\:\\_________________________\\ ///\\\\\\/  \\/  \\/___/___/ /_\n::/\\:\\///_/ /_//:\\:\\:\\:\\/_________________________////::\\\\\\  /\\  /   /   /+/\n::\\ \\:/__  __ /:\\:\\:\\:\\/_________________________/:\\/____\\\\\\/  \\/___/___/ /___\n/\\:\\///_/ /_//:\\:\\:\\:\\/_________________________/:::\\    /\\/\\  /   /   /+/   /\n\\ \\:/__  __ /:\\:\\:\\:\\/_________________________/:::::\\  ///  \\/___/___/ /___/_\n:\\///_/ /_//:\\:\\:\\:\\/_________________________/:\\:::::\\///\\  /   /  __________\n\\:/__  __ /:\\:\\:\\:\\/_________________________/:::\\:::::\\/  \\/___/__/\\\n///_/ /_//:\\:\\:\\:\\/_________________________/:\\:::\\:::::\\  /   /  /::\\\n/__  __ /\\::\\:\\:\\/_________________________/_____::\\:::::\\/___/__/:/\\:\\\n/_/ /_//::\\::\\:\\/_____________________/\\/_/_/_/_/\\  \\           /::\\ \\:\\\n_  __ /:\\::\\:8\\/_____________________/\\/\\   /\\_\\\\/\\  \\ 8       /:/\\:\\ \\:\\\n/ /_//\\     \\|______________________//\\\\/\\::\\/__\\\\/\\  \\|______/::\\ \\:\\ \\:\\\n __ /  \\  \\                        /:\\/:\\/\\_______\\/\\        /:/\\:\\ \\:\\/::\\\n/_//    8      -8  --  --  --  -- //\\::/\\\\/_/_/_/_/_/ --  --/::\\ \\:\\ \\::/\\:\\\n_ /     |\\  \\   |________________/:\\/::\\///__/ /__//_______/:/\\:\\ \\:\\/::\\ \\:\\\n__________\\     \\               //\\::/\\:/___  ___ /       /::\\ \\:\\ \\::/\\:\\ \\:\\\n::::::::::\\\\  \\  \\             /:\\/::\\///__/ /__//       /:/\\:\\ \\:\\/::\\ \\:\\ \\:\n</code></pre>"},{"location":"awsDirectoryStructure/","title":"AWS Directory Structure","text":"<p>This directory is dedicated to declarative infrastructure configurations that are not managed using Terraform. It provides a structured approach to managing AWS resources through organized subdirectories and file formats.</p>"},{"location":"awsDirectoryStructure/#directory-structure","title":"Directory Structure","text":""},{"location":"awsDirectoryStructure/#subdirectories","title":"Subdirectories","text":"<ul> <li>Each subdirectory is named after the AWS service it corresponds to (e.g., <code>eksFargate/</code>).</li> </ul>"},{"location":"awsDirectoryStructure/#file-types","title":"File Types","text":"<ul> <li> <p>YAML Files (<code>*.yaml</code>):</p> </li> <li> <p>Used for CloudFormation templates.</p> </li> <li> <p>Define declarative infrastructure for AWS services.</p> </li> <li> <p>JSON Files (<code>*.json</code>):</p> </li> <li> <p>Contain reusable configurations for various AWS services.</p> </li> <li> <p>Examples include IAM policies, API Gateway configurations, and Lambda function definitions.</p> </li> <li> <p>Text Files (<code>*.txt</code>):</p> </li> <li>Contain links to relevant resources and documentation.</li> <li>Provide step-by-step instructions for building certain pieces of infrastructure manually or with external tools.</li> </ul>"},{"location":"awsDirectoryStructure/#transition-plan","title":"Transition Plan","text":""},{"location":"awsDirectoryStructure/#future-deprecation","title":"Future Deprecation","text":"<ul> <li>This directory structure and method of managing AWS infrastructure will eventually be deprecated in our tech stack.</li> <li>Reasons for Deprecation:</li> <li>The declarative infrastructure currently managed in CloudFormation will be migrated to the <code>tf</code> directory and written in Terraform for consistency and scalability.</li> <li>The AWS directory will be replaced by a <code>k8s</code> directory for managing Kubernetes-based infrastructure.</li> </ul>"},{"location":"awsDirectoryStructure/#benefits-of-the-transition","title":"Benefits of the Transition","text":"<ul> <li> <p>Centralized Infrastructure Management:</p> </li> <li> <p>All infrastructure code will reside in the <code>tf</code> directory, simplifying resource management.</p> </li> <li> <p>Kubernetes Adoption:</p> </li> <li> <p>The <code>k8s</code> directory will enable streamlined deployment and management of cloud-native applications.</p> </li> <li> <p>Standardization:</p> </li> <li>Reduces the fragmentation of declarative infrastructure tools and ensures consistency across the tech stack.</li> </ul> <p>By maintaining this directory structure, we ensure the current approach remains organized and efficient until the transition to a Kubernetes and Terraform-centric infrastructure is complete.</p> <pre><code>        .n.                     |\n       /___\\          _.---.  \\ _ /\n       [|||]         (_._ ) )--;_) =-\n       [___]           '---'.__,' \\\n       }-=-{                    |\n       |-\" |\n       |.-\"|                p\n~^=~^~-|_.-|~^-~^~ ~^~ -^~^~|\\ ~^-~^~-\n^   .=.| _.|__  ^       ~  /| \\\n ~ /:. \\\" _|_/\\    ~      /_|__\\  ^\n.-/::.  |   |\"\"|-._    ^   ~~~~\n  `===-'-----'\"\"`  '-.              ~\n                 __.-'      ^\n</code></pre>"},{"location":"awsIntegration/","title":"AWS Integrations","text":"<p>This document outlines the tools, configurations, and resources used for AWS integrations, particularly focusing on EKS Fargate and Prefect integrations. It also details the storage and utilization of Kubernetes manifest files and Helm charts for seamless infrastructure management.</p>"},{"location":"awsIntegration/#tools-and-command-line-utilities","title":"Tools and Command Line Utilities","text":""},{"location":"awsIntegration/#aws-cli","title":"AWS CLI","text":"<ul> <li>The AWS CLI is utilized for managing AWS resources programmatically.</li> <li>Common tasks include:</li> <li>Creating and managing S3 buckets.</li> <li>Setting up IAM roles and policies.</li> <li>Managing EKS clusters and other AWS services.</li> <li>Example:   <pre><code>aws eks update-kubeconfig --region us-east-1 --name my-eks-cluster\n</code></pre></li> </ul>"},{"location":"awsIntegration/#eksctl-command-line-tool","title":"eksctl Command Line Tool","text":"<ul> <li>The eksctl tool is used for creating and managing EKS clusters.</li> <li>It simplifies the setup and configuration of EKS Fargate integrations.</li> </ul>"},{"location":"awsIntegration/#eks-fargate-integration-for-prefect","title":"EKS Fargate Integration for Prefect","text":"<ul> <li>Prefect's Kubernetes agent is deployed in an EKS Fargate cluster to handle Prefect flow runs.</li> <li>Integration Details:</li> <li>EKS Cluster Configuration:<ul> <li>The cluster is created with eksctl, leveraging Fargate for compute.</li> <li>Each Prefect flow run utilizes borrowed compute containers from Fargate.</li> </ul> </li> <li>Example <code>eksctl</code> configuration file:     <pre><code>apiVersion: eksctl.io/v1alpha5\nkind: ClusterConfig\nmetadata:\n  name: prefect-eks-cluster\n  region: us-east-1\nfargateProfiles:\n  - name: prefect-fargate-profile\n    selectors:\n      - namespace: prefect\n</code></pre></li> <li>Deployment Command:     <pre><code>eksctl create cluster -f eksctl-config.yaml\n</code></pre></li> </ul>"},{"location":"awsIntegration/#kubernetes-manifest-files","title":"Kubernetes Manifest Files","text":"<ul> <li>Purpose:</li> <li>Define the resources and configurations needed for deploying applications in the EKS cluster.</li> <li>Location:</li> <li>Stored in a dedicated directory under the AWS integration repository (e.g., <code>manifests/</code>).</li> <li>Examples:</li> <li>Deployment and service configurations for Prefect agents.</li> <li>Namespace and role-based access control (RBAC) definitions.</li> </ul> <p>Example Manifest:</p> <pre><code>worker:\n  cloudApiConfig:\n    accountId: &lt;account-id&gt;\n    workspaceId: &lt;workspace-id&gt;\n  config:\n    workPool: &lt;work-pool-name&gt;\n</code></pre>"},{"location":"awsIntegration/#helm-charts","title":"Helm Charts","text":"<ul> <li>Purpose:</li> <li>Used for deploying and managing Kubernetes applications in the EKS cluster.</li> <li>Links to Helm Charts:</li> <li>Prefect Helm Chart:<ul> <li>Prefect Helm Chart Documentation</li> </ul> </li> <li>Kubernetes Metrics Server:<ul> <li>Metrics Server Helm Chart</li> </ul> </li> <li>NGINX Ingress Controller:<ul> <li>NGINX Helm Chart</li> </ul> </li> </ul>"},{"location":"awsIntegration/#future-deprecation","title":"Future Deprecation","text":"<ul> <li>This integration method will soon be deprecated in favor of a more unified approach:</li> <li>All CloudFormation infrastructure will be migrated to the <code>tf</code> directory and written in Terraform for consistency.</li> <li>Kubernetes manifest files and EKS-related configurations will be moved to the <code>k8s</code> directory.</li> <li>Benefits of Transition:</li> <li>Centralized infrastructure management.</li> <li>Simplified workflows with a consistent toolset.</li> <li>Enhanced scalability and maintainability by leveraging Kubernetes and Terraform best practices.</li> </ul> <p>By adhering to this plan, we ensure our infrastructure evolves towards a modern and efficient architecture.</p> <pre><code>          [_,_])    \\ /       \\|\n         /|=T=|]     /   __  __\\\n         |\\ \" //     |_  9   p ]\\\n         ||'-'/--.  / /\\ =|  \\|\\ \\\n        /|| &lt;\\/&gt; |\\ | '._, @ @)&lt;_)\n       | |\\   |  |   \\.__/(_;_)\n       |  .   H  |   |  :  '='|\n       |  |  _H__/  _| :      |\n        \\  '.__  \\ /  ;      ';\n       __'-._(_}==.'  :       ;\n      (___|    /-' |   :.     :\n     [.-'  \\   |   \\   \\ ;   :\n    .-'     |  |    |  |   \":\n   /        |==|     \\  \\  /  \\_\n  /         [  |      '._\\_ -._ \\\n /           \\__)   __.- \\ \\   )\\\\\n/       |        /.'      &gt;&gt;)\n|        \\       |\\     |\n|     .'  '-.    | \\    /\n|    /     /     / /   /\n     snd   |    /\n</code></pre>"},{"location":"tfDirectoryStructure/","title":"Terraform Directory Structure","text":"<p>This directory contains all Terraform configurations organized into subdirectories based on cloud providers, platforms, and use cases. Each subdirectory serves a specific purpose, detailed below.</p>"},{"location":"tfDirectoryStructure/#subdirectories","title":"Subdirectories","text":""},{"location":"tfDirectoryStructure/#aws","title":"<code>aws/</code>","text":"<ul> <li>Contains AWS Terraform base modules.</li> <li>For any new AWS resource, a generic (base) version of the resource is created.</li> <li>Each base module includes all possible combinations of arguments, enabling easy import and integration into future modules.</li> </ul>"},{"location":"tfDirectoryStructure/#azuread","title":"<code>azuread/</code>","text":"<ul> <li>Contains Azure Active Directory (AzureAD) Terraform base modules.</li> <li>For any new AzureAD resource, a generic (base) version of the resource is created.</li> <li>Each base module includes all possible combinations of arguments, enabling easy import and integration into future modules.</li> </ul>"},{"location":"tfDirectoryStructure/#azurerm","title":"<code>azurerm/</code>","text":"<ul> <li>Contains Azure Resource Manager (AzureRM) Terraform base modules.</li> <li>For any new AzureRM resource, a generic (base) version of the resource is created.</li> <li>Each base module includes all possible combinations of arguments, enabling easy import and integration into future modules.</li> </ul>"},{"location":"tfDirectoryStructure/#gcp","title":"<code>gcp/</code>","text":"<ul> <li>Contains Google Cloud Platform (GCP) Terraform base modules.</li> <li>For any new GCP resource, a generic (base) version of the resource is created.</li> <li>Each base module includes all possible combinations of arguments, enabling easy import and integration into future modules.</li> </ul>"},{"location":"tfDirectoryStructure/#github","title":"<code>github/</code>","text":"<ul> <li>Contains GitHub Terraform base modules.</li> <li>For any new GitHub resource, a generic (base) version of the resource is created.</li> <li>Each base module includes all possible combinations of arguments, enabling easy import and integration into future modules.</li> </ul>"},{"location":"tfDirectoryStructure/#prefect","title":"<code>prefect/</code>","text":"<ul> <li>Contains Prefect Terraform base modules.</li> <li>For any new Prefect resource, a generic (base) version of the resource is created.</li> <li>Each base module includes all possible combinations of arguments, enabling easy import and integration into future modules.</li> </ul>"},{"location":"tfDirectoryStructure/#snowflake","title":"<code>snowflake/</code>","text":"<ul> <li>Contains Snowflake Terraform base modules.</li> <li>For any new Snowflake resource, a generic (base) version of the resource is created.</li> <li>Each base module includes all possible combinations of arguments, enabling easy import and integration into future modules.</li> </ul>"},{"location":"tfDirectoryStructure/#projects","title":"<code>projects/</code>","text":"<ul> <li>Used for combining base modules.</li> <li>Contains integrations that utilize base modules from one or multiple of the subdirectories above.</li> <li>Includes project modules that are combined and reused to create new project modules, enabling scalable and modular infrastructure design.</li> </ul>"},{"location":"tfDirectoryStructure/#utils","title":"<code>utils/</code>","text":"<ul> <li>Contains utility scripts to assist in creating Terraform elements.</li> <li>Examples include:</li> <li>Validators for variables.</li> <li>Scripts to auto-aggregate modules for creating new modules.</li> </ul> <p>This structure ensures modularity, scalability, and ease of integration, promoting best practices for managing Terraform configurations in a multi-cloud environment.</p> <pre><code>    *   .                  .              .        .   *          .\n  .         .                     .       .           .      .        .\n        o                             .                   .\n         .              .                  .           .\n          0     .\n                 .          .                 ,                ,    ,\n .          \\          .                         .\n      .      \\   ,\n   .          o     .                 .                   .            .\n     .         \\                 ,             .                .\n               #\\##\\#      .                              .        .\n             #  #O##\\###                .                        .\n   .        #*#  #\\##\\###                       .                     ,\n        .   ##*#  #\\##\\##               .                     .\n      .      ##*#  #o##\\#         .                             ,       .\n          .     *#  #\\#     .                    .             .          ,\n                      \\          .                         .\n____^/\\___^--____/\\____O______________/\\/\\---/\\___________---______________\n   /\\^   ^  ^    ^                  ^^ ^  '\\ ^          ^       ---\n         --           -            --  -      -         ---  __       ^\n   --  __                      ___--  ^  ^                         --  __\n</code></pre>"},{"location":"tfIntegration/","title":"Terraform Integration Guide","text":"<p>This guide outlines the practices and standards for integrating Terraform configurations in this repository. It is designed to ensure consistency, scalability, and maintainability across all modules and projects.</p>"},{"location":"tfIntegration/#best-practices","title":"Best Practices","text":""},{"location":"tfIntegration/#tfvars-files","title":"<code>.tfvars</code> Files","text":"<ul> <li>Base Modules and Argument Combinations:</li> <li>Due to the flexibility of base modules, there are many possible argument combinations.</li> <li><code>.tfvars</code> files are git ignored to prevent accidental commits of sensitive information.</li> <li>Example <code>.tfvars</code> files (prefixed with <code>ex_</code>) are not git ignored and can be referenced for future integrations.</li> <li>IMPORTANT: Ensure that no authentication credentials or sensitive data are left in example <code>.tfvars</code> files.</li> </ul>"},{"location":"tfIntegration/#terraform-state-management","title":"Terraform State Management","text":"<ul> <li>All files controlling Terraform state are git ignored:</li> <li>This ensures security and avoids state file conflicts.</li> <li>After cloning the repo or pulling a new module, run <code>terraform init</code> to initialize the module.</li> <li>State Storage:</li> <li>Terraform state is stored on a virtual machine with backups enabled.</li> <li>Access to the state requires:<ul> <li>A valid <code>.pem</code> file.</li> <li>A whitelisted IP address.</li> </ul> </li> <li>This setup allows authorized developers to access and modify the state.</li> </ul>"},{"location":"tfIntegration/#naming-conventions","title":"Naming Conventions","text":"<ul> <li>In-Use Configuration Files:</li> <li>Use camelCase for naming files that contain active configurations.</li> <li>Ensure the Terraform workspace for a module matches the <code>.tfvars</code> file name (without the <code>.tfvars</code> extension).</li> <li>Project Modules:</li> <li>Use intentional and descriptive names.</li> <li>Prefix the name with the first character of each word (e.g., <code>containerLambdaCiCd</code> becomes <code>CLCC_containerLambdaCiCd</code>).</li> <li>For variables in these modules, use the prefix for shorter names (e.g., <code>CLCC_var</code> instead of <code>containerLambdaCiCd_var</code>).</li> </ul>"},{"location":"tfIntegration/#creating-base-resources","title":"Creating Base Resources","text":"<p>When creating base modules for a specific provider (e.g., AWS, GCP, Azure), follow these steps:</p> <ol> <li>Include links to the argument reference for the provider's Terraform documentation.</li> <li>Include links to any argument objects required for complex configurations.</li> <li>Ensure all possible arguments are accounted for to maximize flexibility in future integrations.</li> </ol>"},{"location":"tfIntegration/#example-workflow","title":"Example Workflow","text":"<ol> <li> <p>Adding a New Base Module:</p> </li> <li> <p>Create the module with all possible argument combinations.</p> </li> <li>Add documentation links to argument references and objects.</li> <li> <p>Test the module with an example <code>.tfvars</code> file prefixed with <code>ex_</code>.</p> </li> <li> <p>Cloning the Repository:</p> </li> <li> <p>Run <code>terraform init</code> to set up the required dependencies and providers.</p> </li> <li> <p>State Management:</p> </li> <li> <p>Access the virtual machine with the <code>.pem</code> file and from a whitelisted IP.</p> </li> <li> <p>Modify state files as necessary.</p> </li> <li> <p>Creating a New Project Module:</p> </li> <li>Combine base modules into a project module.</li> <li>Name the module intentionally and prefix it (e.g., <code>CLCC_containerLambdaCiCd</code>).</li> <li>Use the prefix for variable declarations (e.g., <code>CLCC_var</code>).</li> </ol> <p>By following this guide, you\u2019ll ensure seamless integration of Terraform configurations while maintaining security and consistency across the repository.</p> <pre><code>        _ _______        _______ _\n       /_/_______/\\-----/\\_______\\_\\\n      / /\\    _  \\ \\---/ /  _    /\\ \\\n     / /  \\  \\_\\  \\ \\-/ /  /_/  /  \\ \\\n    /_/ /\\ \\_______\\/-\\/_______/ /\\ \\_\\\n   /\\ \\ \\/ /  _    /\\-/\\   _   \\ \\/ / /\\\n  /\\ \\ \\  /  /_/  / /-\\ \\  \\_\\  \\  / / /\\\n /  \\ \\_\\/_______/ /---\\ \\_______\\/_/ /  \\\n/ /\\ \\/\\_\\_______\\/-----\\/_______/_/\\/ /\\ \\\n\\ \\/ /\\/_/_______/\\-----/\\_______\\_\\/\\ \\/ /\n \\  / / /\\    _  \\ \\---/ /  _    /\\ \\ \\  /\n  \\/ / /  \\  \\_\\  \\ \\-/ /  /_/  /  \\ \\ \\/\n   \\/_/ /\\ \\_______\\/-\\/_______/ /\\ \\_\\/\n    \\ \\ \\/ /  _    /\\-/\\   _   \\ \\/ / /\n     \\ \\  /  /_/  / /-\\ \\  \\_\\  \\  / /\n      \\_\\/_______/ /---\\ \\_______\\/_/\n       \\_\\_______\\/-----\\/_______/_/\n</code></pre>"}]}